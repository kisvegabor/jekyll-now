<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__utils_8h" kind="file" language="C++">
    <compoundname>lv_utils.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="1543">
        <label>stdint.h</label>
      </node>
      <node id="1544">
        <label>stddef.h</label>
      </node>
      <node id="1542">
        <label>/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_utils.h</label>
        <link refid="lv__utils_8h"/>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__utils_8h_1a7fd8e92836079ba11d90f8582e50d453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* lv_utils_num_to_str</definition>
        <argsstring>(int32_t num, char *buf)</argsstring>
        <name>lv_utils_num_to_str</name>
        <param>
          <type>int32_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a number to string <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>a number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <computeroutput>char</computeroutput> buffer. The result will be stored here (max 10 elements) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>same as <computeroutput>buf</computeroutput> (just for convenience) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_utils.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__utils_8h_1a8dd480f581157e31d2918953900eb503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* lv_utils_bsearch</definition>
        <argsstring>(const void *key, const void *base, uint32_t n, uint32_t size, int32_t(*cmp)(const void *pRef, const void *pElement))</argsstring>
        <name>lv_utils_bsearch</name>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int32_t(*)(const void *pRef, const void *pElement)</type>
          <declname>cmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Searches base[0] to base[n - 1] for an item that matches *key.</para><para><simplesect kind="note"><para>The function cmp must return negative if its first argument (the search key) is less that its second (a table entry), zero if equal, and positive if greater.</para></simplesect>
<simplesect kind="note"><para>Items in the array must be in ascending order.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to item being searched for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to first element to search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of each element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to comparison function (see #lv_font_codeCompare as a comparison function example)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to a matching item, or NULL if none exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_utils.h" line="55" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>**********************/</highlight></codeline>
<codeline lineno="36"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__utils_8h_1a7fd8e92836079ba11d90f8582e50d453" kindref="member">lv_utils_num_to_str</ref>(int32_t<sp/>num,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>buf);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__utils_8h_1a8dd480f581157e31d2918953900eb503" kindref="member">lv_utils_bsearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>base,<sp/>uint32_t<sp/>n,<sp/>uint32_t<sp/>size,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>(*cmp)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pRef,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pElement));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/pc_simulator_sdl_eclipse/lvgl/src/lv_misc/lv_utils.h"/>
  </compounddef>
</doxygen>
